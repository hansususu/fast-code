name: fast CI/CD

on:
  push:
    branches: [main]
    paths-ignore: # push 이벤트가 발생해도 무시할 파일
    - '.gitignore'
    - '.dockerignore'

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1 # 가장 최근 commit의 히스토리만 가져옴
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
          aws-region: ap-northeast-2
      - name: Set Variables
        id: set-var
        run: |
          echo "ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV
          echo "ECR_REPOSITORY=fast" >> $GITHUB_ENV
          echo "IMAGE_TAG=${{ github.run_number }}" >> $GITHUB_ENV
          echo "GIT_EMAIL=hansubin0039@gmail.com" >> $GITHUB_ENV
          echo "GIT_NAME=hansususu" >> $GITHUB_ENV
    # - uses: actions/setup-java@v2
    #   with:
    #     distribution: adopt
    #     java-version: 8
     
  #  - name: Setup Gradle
  #    uses: gradle/gradle-build-action@v3

  #  - name: chmod
  #    run: chmod +x ./gradlew
  #    gradle로 빌드시 사용

    # - name: Execute maven build
    #   run: mvn clean package

    - name: Docker Image Build
      id: build-image
      run: |
        docker build -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} .

    - name: Docker image Push
      id: push-image
      run: |
        docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

    - name: Checkout Deployment Repository
      uses: actions/checkout@v4
      with:
        repository: hansususu/deployment #본인에 맞게 수정
        ref: main  # branch
        token: ${{ secrets.GH_TOKEN }}

    - name: k8s manifest update
      run: |
        sed -i "s@ \
        image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:.*@ \
        image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}@g" deployment.yml

    - name: Commit and Push
      run: |
        git config user.email ${{ env.GIT_EMAIL }}
        git config user.name ${{ env.GIT_NAME }}
        git add deployment.yml
        git commit -m "Update image tag"
        git push origin main
